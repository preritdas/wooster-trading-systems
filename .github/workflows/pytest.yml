name: tests

on: [push, pull_request]

jobs:
  test:

    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: ["ubuntu-latest", "macos-latest", "windows-latest"]

    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install TA-Lib
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: |
            sudo apt update && sudo apt upgrade -y
            sudo apt install wget -y
            sudo add-apt-repository ppa:deadsnakes/ppa
            sudo apt-get install build-essential -y
            sudo apt install python3.10-dev -y
            sudo apt-get install python3-dev -y
            wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
            tar -xzf ta-lib-0.4.0-src.tar.gz
            cd ta-lib
            ./configure --prefix=/usr
            make
            sudo make install
          macos: |
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            brew install ta-lib
          windows: |
            pip install dependencies/TA_Lib-0.4.24-cp310-cp310-win_amd64.whl

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Inject keys
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: |
            echo -en '${{ secrets.KEYS_INI }}' >> keys.ini
          macos: |
            echo -en '${{ secrets.KEYS_INI }}' >> keys.ini
          windows: |
            New-Item "keys.ini" -ItemType File -Value "${{ secrets.KEYS_INI }}"

      - name: Initialize test dependencies
        run: pip install -U pytest-cov coverage-badge

      - name: Run tests with pytest
        run: python -m pytest --cov

      - name: Update tests coverage badge (only Ubuntu)
        if: always()  # update badge even if the tests failed
        uses: knicknic/os-specific-run@v1.0.3
        with: 
          linux: |
            coverage-badge -o tests/badge.svg -f
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add tests/badge.svg
            git commit --author="Prerit Das <preritdas@gmail.com>" -m "Coverage badge updated after tests."
            git push
